version: "3.9"

services:

  db:
    image: mysql:latest
    container_name: grudge_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root    # Root password
      MYSQL_DATABASE: ${PG_DB}              # Name of the default database
      MYSQL_USER: ${PG_USER}                # User to create
      MYSQL_PASSWORD: ${PG_PASSWORD}        # Password for the user
    ports:
      - "3333:3306"
    volumes:
      - postgres_data:/var/lib/mysql

  alembic:
    build:
      context: ./
      dockerfile: migrations/Dockerfile
    container_name: alembic
    depends_on:
      - db
    environment:
      - DSN=${DSN}
      - DATABASE=MYSQL
    command: >
      sh -c "
      alembic upgrade head && echo 'Migrations applied successfully.'
      "
    restart: "on-failure"

  content_api:
    build:
      context: ./
      dockerfile: api/content_api/Dockerfile
    container_name: content_api
    depends_on:
      - db
      - alembic
    environment:
      - DSN=${DSN}
      - DATABASE=MYSQL
    ports:
      - "8001:8001"
    volumes:
      - ./:/app/
    command: >
      sh -c "
      uvicorn api.content_api.main:app --host 0.0.0.0 --port 8001 --reload
      "
  identity_api:
    build:
      context: ./
      dockerfile: api/identity_api/Dockerfile
    container_name: identity_api
    depends_on:
      - db
      - alembic
    environment:
      - DSN=${DSN}
      - DATABASE=MYSQL
    ports:
      - "8000:8000"
    volumes:
      - ./:/app/
    command: >
      sh -c "
      uvicorn api.identity_api.main:app --host 0.0.0.0 --port 8000 --reload
      "
  people_api:
    build:
      context: ./
      dockerfile: api/people_api/Dockerfile
    container_name: people_api
    depends_on:
      - db
      - alembic
    environment:
      - DSN=${DSN}
      - DATABASE=MYSQL
    ports:
      - "8002:8002"
    volumes:
      - ./:/app/
    command: >
      sh -c "
      uvicorn api.people_api.main:app --host 0.0.0.0 --port 8002 --reload
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    command: >
      sh -c "
      npm install && npm start
      "

volumes:
  postgres_data:

networks:
  default:
    name: ttsaw_network
